{"version":3,"sources":["App.js","screen.svg","logo.svg","screenOut.svg","video.svg","videoOut.svg","record.svg","default.svg","live.svg","microphone.svg","microphonemuted.svg","grid.svg","reportWebVitals.js","index.js"],"names":["mediaRecorder","recordedBlobs","document","getElementById","App","time","Date","setSeconds","getSeconds","useState","screenshare","setScreenshare","recording","setRecording","storing","setStoring","audioRecording","setAudioRecording","muted","setMuted","expanded","setExpanded","drawVideoIntervalId","setDrawVideoIntervalId","screenShareVideoIntervalId","setDrawScreenShareIntervalId","canvasPos","setCanvasPos","useStopwatch","expiryTimestamp","minutes","hours","seconds","start","isRunning","reset","restart","window","bottomBarHeight","a","navigator","mediaDevices","getDisplayMedia","video","then","handleSuccess","handleError","err","console","error","canvasResize","xValue","innerHeight","fromLeft","innerWidth","left","stream","querySelector","srcObject","clearInterval","clearCanvas","screenAspectRatio","getVideoTracks","getSettings","aspectRatio","setIntervalDrawScreenShareId","setInterval","drawOnCanvas","type","height","width","addEventListener","store","addNotification","title","message","insert","container","animationIn","animationOut","dismiss","duration","onScreen","params","constraints","audio","echoCancellation","exact","log","getUserMedia","handleSuccessVideoRecording","Error","toString","videoHeight","videoWidth","setIntervalDrawVideoId","canvas","recordedVideo","getContext","drawImage","yValue","clearRect","handleDataAvailable","event","data","size","push","useEffect","audioStream","className","id","style","overflow","marginTop","textAlign","src","defaultImg","background","data-tip","data-for","onClick","getTracks","forEach","track","stop","stopScreenShare","startScreenRecording","screen","screenOut","marginLeft","place","effect","fontSize","stopVideoRecording","startVideoRecording","videoOut","getAudioTracks","enabled","mutedmic","mic","fontWeight","color","options","mimeType","MediaRecorder","isTypeSupported","captureStream","mixedStream","MediaStream","e","JSON","stringify","onstop","blob","Blob","url","URL","createObjectURL","createElement","display","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","ondataavailable","startRecording","record","autoPlay","playsInline","position","visibility","right","top","zIndex","marginRight","live","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b434b1e0.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\r\nimport logo from './logo.svg';\r\nimport screen from './screen.svg';\r\nimport screenOut from './screenOut.svg';\r\n\r\nimport video from './video.svg';\r\nimport videoOut from './videoOut.svg';\r\n\r\nimport record from './record.svg';\r\nimport defaultImg from './default.svg';\r\nimport live from './live.svg';\r\nimport mic from './microphone.svg';\r\nimport mutedmic from './microphonemuted.svg';\r\nimport grid from './grid.svg';\r\n\r\n\r\n\r\n\r\n\r\nimport './App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport { store } from 'react-notifications-component';\r\nimport ReactNotification from 'react-notifications-component'\r\nimport { useStopwatch } from 'react-timer-hook';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst videoElem = document.getElementById(\"video\");\r\nlet dataFrameHeight, dataFrameWidth\r\n// const errorElement = document.querySelector('#errorMsg');\r\nvar canvasRecorder\r\n\r\n/* globals MediaRecorder */\r\n\r\nlet mediaRecorder;\r\nlet recordedBlobs = [];\r\n\r\nfunction App() {\r\n  const time = new Date();\r\n  time.setSeconds(time.getSeconds() + 36000);\r\n\r\n  const [screenshare, setScreenshare] = useState(false)\r\n  const [recording, setRecording] = useState(false)\r\n  const [storing, setStoring] = useState(false)\r\n  const [audioRecording, setAudioRecording] = useState(false)\r\n  const [muted, setMuted] = useState(false)\r\n  const [expanded, setExpanded] = useState(\"recorded\")\r\n  const [drawVideoIntervalId, setDrawVideoIntervalId] = useState('')\r\n  const [screenShareVideoIntervalId, setDrawScreenShareIntervalId] = useState('')\r\n  const [canvasPos, setCanvasPos] = useState({})\r\n  const {\r\n    minutes,\r\n    hours,\r\n    seconds,\r\n    isRunning,\r\n    start,\r\n    reset,\r\n    restart,\r\n  } = useStopwatch({ expiryTimestamp: time });\r\n\r\n  window.screenshare = screenshare\r\n  window.recording = recording\r\n  window.expanded = expanded\r\n  const bottomBarHeight = 110\r\n\r\n\r\n  async function startScreenRecording() {\r\n    try {\r\n      if (!recording) {\r\n        setExpanded('screen')\r\n      }\r\n      navigator.mediaDevices.getDisplayMedia({ video: true })\r\n        .then(handleSuccess, handleError);\r\n    } catch (err) {\r\n      console.error(\"Error: \" + err);\r\n    };\r\n\r\n  }\r\n\r\n  function canvasResize(){\r\n    if((!screenshare && recording)||(screenshare && window.expanded !== 'screen')){\r\n      let aspectRatio = 1.77777777778\r\n      let xValue = (window.innerHeight-125) * aspectRatio\r\n      let fromLeft = (window.innerWidth - xValue)/2\r\n      if(fromLeft > 0 ){\r\n        setCanvasPos({...canvasPos, left:fromLeft})\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleSuccess(stream) {\r\n    setScreenshare(true)\r\n    const video = document.querySelector('video#screen');\r\n    window.stream = stream\r\n    video.srcObject = stream;\r\n    if (recording) {\r\n      clearInterval(drawVideoIntervalId);\r\n      setDrawVideoIntervalId(\"\")\r\n      clearCanvas()\r\n    }\r\n    if (screenShareVideoIntervalId) {\r\n      clearInterval(screenShareVideoIntervalId)\r\n      setDrawScreenShareIntervalId(\"\")\r\n      clearCanvas()\r\n    }\r\n\r\n    window.screenAspectRatio = stream.getVideoTracks()[0].getSettings().aspectRatio;\r\n\r\n    let setIntervalDrawScreenShareId = window.setInterval(() => drawOnCanvas({\r\n      recording,\r\n      screenshare: true,\r\n      type: \"screenshare\",\r\n      aspectRatio: stream.getVideoTracks()[0].getSettings().aspectRatio,\r\n      height: stream.getVideoTracks()[0].getSettings().height,\r\n      width: stream.getVideoTracks()[0].getSettings().width\r\n    }), 1000/20)\r\n    setDrawScreenShareIntervalId(setIntervalDrawScreenShareId)\r\n    stream.getVideoTracks()[0].addEventListener('ended', () => {\r\n      setScreenshare(false)\r\n    });\r\n  }\r\n\r\n\r\n  function stopScreenShare() {\r\n    const video = document.querySelector('video#screen');\r\n    if (!recording) {\r\n      clearInterval(screenShareVideoIntervalId)\r\n    }\r\n    video.srcObject.getTracks().forEach(track => track.stop())\r\n    setScreenshare(false)\r\n    clearCanvas()\r\n  }\r\n\r\n  function handleError(error) {\r\n    store.addNotification({\r\n      title: error.message,\r\n      message: \" \",\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-right\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 5000,\r\n        onScreen: true\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  async function startVideoRecording(params) {\r\n    if (!screenshare) {\r\n      setExpanded('recorded')\r\n    }\r\n    const constraints = {\r\n      audio: {\r\n        echoCancellation: { exact: true }\r\n      },\r\n      video: {\r\n        width: 1280, height: 720\r\n      }\r\n    };\r\n    console.log('Using media constraints:', constraints);\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n      handleSuccessVideoRecording(stream);\r\n    } catch (e) {\r\n      setRecording(false)\r\n      console.error('navigator.getUserMedia error:', e);\r\n      handleError(new Error(`navigator.getUserMedia error:${e.toString()}`));\r\n    }\r\n  }\r\n\r\n  function handleSuccessVideoRecording(stream) {\r\n    setRecording(true)\r\n    const gumVideo = document.querySelector('video#recorded');\r\n    gumVideo.srcObject = stream;\r\n    window.videoHeight = stream.getVideoTracks()[0].getSettings().height;\r\n    window.videoWidth = stream.getVideoTracks()[0].getSettings().width;\r\n    window.aspectRatio= stream.getVideoTracks()[0].getSettings().aspectRatio;\r\n    if (!screenshare) {\r\n      let setIntervalDrawVideoId = window.setInterval(() => drawOnCanvas({\r\n        recording: true,\r\n        screenshare,\r\n      }), 1000 / 20)\r\n      setDrawVideoIntervalId(setIntervalDrawVideoId)\r\n    } else {\r\n      drawOnCanvas({\r\n        recording: true,\r\n        screenshare,\r\n      })\r\n    }\r\n  }\r\n\r\n  function drawOnCanvas({ aspectRatio, width, height, recording, screenshare }) {\r\n    const canvas = window.canvas = document.querySelector('canvas');\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight - bottomBarHeight;\r\n    const recordedVideo = document.querySelector('video#recorded');\r\n    const video = document.querySelector('video#screen');\r\n    if (window.recording && window.screenshare) {\r\n      if (window.expanded == 'screen') {\r\n        let xValue =  (window.innerHeight - bottomBarHeight)* aspectRatio || window.screenAspectRatio\r\n        let fromLeft = (window.innerWidth - xValue)/2\r\n        fromLeft =  fromLeft > 0 ? fromLeft : 0 \r\n        canvas.getContext('2d').drawImage(video, fromLeft, 0, (window.innerHeight - bottomBarHeight) *  (aspectRatio || window.screenAspectRatio), window.innerHeight - bottomBarHeight);\r\n        canvas.getContext('2d').drawImage(recordedVideo, ((window.innerWidth - (1280 * 105) / 720) - 50), window.innerHeight - bottomBarHeight - 150, (1280 * 105) / 720, 105);\r\n      } else {\r\n        let xValue = (window.innerHeight-bottomBarHeight) * window.aspectRatio\r\n        let yValue =  window.innerHeight-bottomBarHeight;\r\n        let fromLeft = (window.innerWidth - xValue)/2\r\n        fromLeft =  fromLeft > 0 ? fromLeft : 0 \r\n        canvas.getContext('2d').drawImage(recordedVideo, fromLeft, 0, xValue, yValue);\r\n        canvas.getContext('2d').drawImage(video, ((window.innerWidth - (1280 * 105) / 720) - 50) ,window.innerHeight - bottomBarHeight - 150,  (width * 105) / (height), 105);\r\n      }\r\n    }\r\n    else {\r\n      if (window.recording) {\r\n        let xValue = (window.innerHeight-bottomBarHeight) * window.aspectRatio\r\n        let yValue =  window.innerHeight-bottomBarHeight;\r\n        let fromLeft = (window.innerWidth - xValue)/2\r\n        fromLeft =  fromLeft > 0 ? fromLeft : 0 \r\n        canvas.getContext('2d').drawImage(recordedVideo, fromLeft, 0, xValue, yValue);\r\n      }\r\n      if (window.screenshare) {\r\n        let xValue =  (window.innerHeight - bottomBarHeight)*  (aspectRatio || window.screenAspectRatio)\r\n        let fromLeft = (window.innerWidth - xValue)/2\r\n        fromLeft =  fromLeft > 0 ? fromLeft : 0 \r\n        canvas.getContext('2d').drawImage(video, fromLeft, 0, (window.innerHeight - bottomBarHeight)*(aspectRatio || window.screenAspectRatio), window.innerHeight - bottomBarHeight);\r\n      }\r\n    }\r\n  }\r\n\r\n  function clearCanvas() {\r\n    const context = window.canvas.getContext('2d');\r\n    context.clearRect(0, 0, window.canvas.width, window.canvas.height);\r\n  }\r\n\r\n  function stopVideoRecording() {\r\n    const video = document.querySelector('video#recorded');\r\n    if (drawVideoIntervalId) {\r\n      clearInterval(drawVideoIntervalId)\r\n    }\r\n    video.srcObject.getTracks().forEach(track => track.stop())\r\n    setRecording(false)\r\n    clearCanvas()\r\n  }\r\n\r\n\r\n  function handleDataAvailable(event) {\r\n    if (event.data && event.data.size > 0) {\r\n      recordedBlobs.push(event.data);\r\n    }\r\n  }\r\n\r\n  function recordAudio() {\r\n    // if (recorder && recorder.state == \"recording\") {\r\n    //     recorder.stop();\r\n    //     audioStream.getAudioTracks()[0].stop();\r\n    // } else {\r\n        navigator.mediaDevices.getUserMedia({\r\n            audio: true,\r\n            echoCancellation: { exact: true }\r\n        }).then(function(stream) {\r\n            window.audioStream = stream;\r\n        });\r\n    // }\r\n  }\r\n\r\n  function muteAudio(){\r\n    if(audioRecording){\r\n      window.audioStream.getAudioTracks()[0].enabled = !muted;\r\n      setMuted(!muted)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    recordAudio()\r\n    setAudioRecording(true)\r\n    canvasResize()\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    canvasResize()\r\n  }, [recording, screenshare, expanded])\r\n\r\n  window.addEventListener('resize', canvasResize)\r\n\r\n  function startRecording() {\r\n    recordedBlobs = []\r\n    let options = { mimeType: 'video/webm;codecs=vp9,opus' };\r\n    if (!MediaRecorder.isTypeSupported(options.mimeType)) {\r\n      console.error(`${options.mimeType} is not supported`);\r\n      options = { mimeType: 'video/webm;codecs=vp8,opus' };\r\n      if (!MediaRecorder.isTypeSupported(options.mimeType)) {\r\n        console.error(`${options.mimeType} is not supported`);\r\n        options = { mimeType: 'video/webm' };\r\n        if (!MediaRecorder.isTypeSupported(options.mimeType)) {\r\n          console.error(`${options.mimeType} is not supported`);\r\n          options = { mimeType: '' };\r\n        }\r\n      }\r\n    }\r\n\r\n    try {\r\n      let stream = window.canvas.captureStream();\r\n      let mixedStream  = new MediaStream([window.audioStream.getAudioTracks()[0], stream.getVideoTracks()[0]]);\r\n      mediaRecorder = new MediaRecorder(mixedStream, options);\r\n    } catch (e) {\r\n      console.error('Exception while creating MediaRecorder:', e);\r\n      handleError(new Error(`Exception while creating MediaRecorder: ${JSON.stringify(e)}`))\r\n      return;\r\n    }\r\n\r\n    console.log('Created MediaRecorder', mediaRecorder, 'with options', options);\r\n    mediaRecorder.onstop = (event) => {\r\n      console.log('Recorder stopped: ', event);\r\n      const blob = new Blob(recordedBlobs, { type: 'video/webm' });\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.style.display = 'none';\r\n      a.href = url;\r\n      a.download = 'test.webm';\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      setTimeout(() => {\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n      }, 100);\r\n      setStoring(false)\r\n      reset()\r\n    };\r\n    mediaRecorder.ondataavailable = handleDataAvailable;\r\n    mediaRecorder.start();\r\n    setStoring(true)\r\n    start()\r\n  }\r\n\r\n  function stopRecording() {\r\n    mediaRecorder.stop();\r\n  }\r\n\r\n  const OPTIONS = { delay: 100 }\r\n\r\n\r\n  return (\r\n    <div className=\"App\" >\r\n      <ReactNotification />\r\n      <header className=\"App-header\" id=\"content\" style={{overflow:\"hidden\"}}>\r\n        {(!recording && !screenshare) ? <div style={{ marginTop: -bottomBarHeight, textAlign:\"center\" }}>\r\n          <img src={defaultImg} width=\"350px\" height=\"auto\" />\r\n          <div className=\"circular text-center\" style={{ marginTop: 35 }}>\r\n            You are not sharing anything\r\n          </div>\r\n        </div> : null}\r\n        <div className=\"overlay\" style={{ background: (recording || screenshare) ? \"#f5f5f538\" : \"whitesmoke\" }}>\r\n\r\n        </div>\r\n        <div className=\"action-buttons\">\r\n          <div data-tip data-for='shareScreen' onClick={() => screenshare ? stopScreenShare() : startScreenRecording()} className=\"circular start\" id={screenshare ? \"stop\" : \"start\"}>\r\n            <img src={screenshare ?  screen : screenOut} width=\"30px\" height=\"30px\" className=\"v-middle\" style={{marginLeft:!screenshare && -2}} />\r\n          </div>\r\n\r\n          <ReactTooltip id='shareScreen' type='dark' place=\"top\" effect='solid'>\r\n            <span className=\"circular\" style={{ fontSize: 15 }}>{screenshare ? \"Stop screen\" : \"Share screen\"}</span>\r\n          </ReactTooltip>\r\n\r\n          <div data-tip data-for='recording' onClick={() => recording ? stopVideoRecording() : startVideoRecording()} className=\"circular start2\" id={recording ? \"stop\" : \"start\"}>\r\n            <img src={recording ?  video : videoOut} width=\"30px\" height=\"30px\" className=\"v-middle\" />\r\n          </div>\r\n          <ReactTooltip id='recording' type='dark' place=\"top\" effect='solid'>\r\n            <span className=\"circular\" style={{ fontSize: 15 }}>{recording ? \" Stop video\" : \"Share video\"}</span>\r\n          </ReactTooltip>\r\n\r\n          <div data-tip data-for='audio' onClick={() => muteAudio()} className={`circular start3`} id={!muted ? \"stop\" : \"start\"}>\r\n            <img src={!muted ? mic: mutedmic} width=\"30px\" height=\"30px\" className=\"v-middle\" />\r\n            <div style={{marginTop:19, fontWeight:100, color:\"grey\", fontSize:\"0.7rem\"}}>{muted && \"Muted\"}</div>\r\n          </div>\r\n\r\n          <ReactTooltip id='audio' type='dark' place=\"top\" effect='solid'>\r\n            <span className=\"circular\" style={{ fontSize: 15 }}>{!muted ? \"Mute micophone\" : \"Unmute micophone\"}</span>\r\n          </ReactTooltip>\r\n\r\n          <div data-tip data-for='storing' onClick={() => storing ? stopRecording(true) : startRecording()} className={`circular start3 ${!recording && !screenshare && !storing ? \"disabled\" : null}`} id={storing ? \"stop\" : \"start\"}>\r\n            <img src={record} width=\"30px\" height=\"30px\" className=\"v-middle\" />\r\n          </div>\r\n\r\n\r\n          <ReactTooltip id='storing' type='dark' place=\"top\" effect='solid'>\r\n            <span className=\"circular\" style={{ fontSize: 15 }}>{storing ? \"Stop recording\" : \"Start recording\"}</span>\r\n          </ReactTooltip>\r\n\r\n\r\n        </div>\r\n        <video id=\"screen\" className={`${expanded == \"recorded\" && \"bottom-right\"}`} autoPlay playsInline muted style={{ position: \"absolute\", visibility: \"hidden\", height: 0 }}></video>\r\n        <video id=\"recorded\" className={`${expanded == \"screen\" && \"bottom-right\"}`} playsInline autoPlay muted style={{ position: \"absolute\", visibility: \"hidden\", height: 0 }}></video>\r\n        <div id=\"errorMsg\"></div>\r\n        {screenshare && recording &&  <div style={{ right: 20, top: 20, zIndex: 22 }} className=\"switch v-middle\" onClick={() => setExpanded(expanded == \"screen\" ? \"recorded\" : \"screen\")}>\r\n          <div className=\"switch-div\">\r\n            <img src=\"https://image.flaticon.com/icons/svg/125/125868.svg\" width=\"20px\" height=\"20px\" className=\"v-middle\" style={{marginRight:10, marginLeft:3}} />\r\n            <span className=\"circular v-middle\" style={{ fontSize: 17, marginTop:-1 }}>Switch views</span>\r\n          </div>\r\n        </div>}\r\n\r\n        {storing && <div id=\"animate-flicker\" style={{ left: 20, top: 8, zIndex: 22, position: \"fixed\" }} title=\"Recording\">\r\n          <img src={live} width=\"50px\" height=\"50px\" className=\"v-middle\" />\r\n        </div>}\r\n        <canvas style={{ zIndex:10, position: (!recording && !screenshare) ? \"absolute\" :  (!screenshare && recording)||(screenshare && window.expanded !== 'screen') ? \"absolute\":\"null\", /*left: window.expanded !== 'screen' && canvasPos.left,*/ top:0 }}></canvas>\r\n        {storing && <div className=\"timer circular\" style={{ color: \"#f3f1f1\" }}>\r\n          <div style={{ display: \"inline-block\" }}>{hours <= 9 ? \"0\" + hours : hours}:</div><div style={{ display: \"inline-block\" }}>{minutes <= 9 ? <span>0{minutes}</span> : minutes}:</div>\r\n          <div style={{ display: \"inline-block\" }}>{seconds <= 9 ? \"0\" + seconds : seconds}</div>\r\n        </div>\r\n        }\r\n      </header>\r\n    </div >\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/screen.04305a48.svg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/screenOut.e910bb34.svg\";","export default __webpack_public_path__ + \"static/media/video.433a10ed.svg\";","export default __webpack_public_path__ + \"static/media/videoOut.340e0b45.svg\";","export default __webpack_public_path__ + \"static/media/record.44b2eb0e.svg\";","export default __webpack_public_path__ + \"static/media/default.fe61671c.svg\";","export default __webpack_public_path__ + \"static/media/live.41bc718e.svg\";","export default __webpack_public_path__ + \"static/media/microphone.49d8b474.svg\";","export default __webpack_public_path__ + \"static/media/microphonemuted.cdc8e750.svg\";","export default __webpack_public_path__ + \"static/media/grid.56527739.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}