{"version":3,"sources":["App.js","screen.svg","logo.svg","video.svg","record.svg","default.svg","live.svg","reportWebVitals.js","index.js"],"names":["mediaRecorder","recordedBlobs","document","getElementById","App","time","Date","setSeconds","getSeconds","useState","screenshare","setScreenshare","recording","setRecording","storing","setStoring","expanded","setExpanded","drawVideoIntervalId","setDrawVideoIntervalId","screenShareVideoIntervalId","setDrawScreenShareIntervalId","useStopwatch","expiryTimestamp","minutes","hours","seconds","start","isRunning","reset","a","navigator","mediaDevices","getDisplayMedia","video","audio","then","handleSuccess","handleError","err","console","error","stream","querySelector","window","srcObject","clearInterval","clearCanvas","setIntervalDrawScreenShareId","setInterval","drawOnCanvas","type","aspectRatio","getVideoTracks","getSettings","height","width","addEventListener","store","addNotification","title","message","insert","container","animationIn","animationOut","dismiss","duration","onScreen","params","constraints","echoCancellation","exact","log","getUserMedia","handleSuccessVideoRecording","Error","toString","videoHeight","videoWidth","setIntervalDrawVideoId","canvas","innerWidth","innerHeight","recordedVideo","getContext","drawImage","clearRect","handleDataAvailable","event","data","size","push","restart","className","id","style","marginTop","src","defaultImg","background","data-tip","data-for","onClick","getTracks","forEach","track","stop","stopScreenShare","startScreenRecording","screen","place","effect","fontSize","stopVideoRecording","startVideoRecording","options","mimeType","MediaRecorder","isTypeSupported","captureStream","e","JSON","stringify","onstop","blob","Blob","url","URL","createObjectURL","createElement","display","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","ondataavailable","startRecording","record","autoPlay","playsInline","muted","position","visibility","right","top","zIndex","left","live","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2b33e464.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\nimport logo from './logo.svg';\nimport screen from './screen.svg';\nimport video from './video.svg';\nimport record from './record.svg';\nimport defaultImg from './default.svg';\nimport live from './live.svg';\n\n\nimport './App.css';\nimport { useState } from 'react';\nimport 'react-notifications-component/dist/theme.css'\nimport { store } from 'react-notifications-component';\nimport ReactNotification from 'react-notifications-component'\nimport { useStopwatch } from 'react-timer-hook';\nimport ReactTooltip from 'react-tooltip';\n\nconst videoElem = document.getElementById(\"video\");\nlet dataFrameHeight, dataFrameWidth\n// const errorElement = document.querySelector('#errorMsg');\nvar canvasRecorder\n\n/* globals MediaRecorder */\n\nlet mediaRecorder;\nlet recordedBlobs = [];\n\nfunction App() {\n  const time = new Date();\n  time.setSeconds(time.getSeconds() + 36000);\n\n  const [screenshare, setScreenshare] = useState(false)\n  const [recording, setRecording] = useState(false)\n  const [storing, setStoring] = useState(false)\n  const [expanded, setExpanded] = useState(\"recorded\")\n  const [drawVideoIntervalId, setDrawVideoIntervalId] = useState('')\n  const [screenShareVideoIntervalId, setDrawScreenShareIntervalId] = useState('')\n  const {\n    minutes,\n    hours,\n    seconds,\n    isRunning,\n    start,\n    reset,\n    restart,\n  } = useStopwatch({ expiryTimestamp: time });\n\n  window.screenshare = screenshare\n  window.recording = recording\n  window.expanded = expanded\n\n\n  async function startScreenRecording() {\n    try {\n      if (!recording) {\n        setExpanded('screen')\n      }\n      navigator.mediaDevices.getDisplayMedia({ video: true, audio: true })\n        .then(handleSuccess, handleError);\n    } catch (err) {\n      console.error(\"Error: \" + err);\n    };\n\n  }\n\n  function handleSuccess(stream) {\n    setScreenshare(true)\n    const video = document.querySelector('video#screen');\n    window.stream = stream\n    video.srcObject = stream;\n    if (recording) {\n      clearInterval(drawVideoIntervalId);\n      setDrawVideoIntervalId(\"\")\n      clearCanvas()\n    }\n    if (screenShareVideoIntervalId) {\n      clearInterval(screenShareVideoIntervalId)\n      setDrawScreenShareIntervalId(\"\")\n      clearCanvas()\n    }\n\n    let setIntervalDrawScreenShareId = window.setInterval(() => drawOnCanvas({\n      recording,\n      screenshare: true,\n      type: \"screenshare\",\n      aspectRatio: stream.getVideoTracks()[0].getSettings().aspectRatio,\n      height: stream.getVideoTracks()[0].getSettings().height,\n      width: stream.getVideoTracks()[0].getSettings().width\n    }), 1000 / 60)\n    setDrawScreenShareIntervalId(setIntervalDrawScreenShareId)\n    stream.getVideoTracks()[0].addEventListener('ended', () => {\n      setScreenshare(false)\n    });\n  }\n\n\n  function stopScreenShare() {\n    const video = document.querySelector('video#screen');\n    if (!recording) {\n      clearInterval(screenShareVideoIntervalId)\n    }\n    video.srcObject.getTracks().forEach(track => track.stop())\n    setScreenshare(false)\n    clearCanvas()\n  }\n\n  function handleError(error) {\n    store.addNotification({\n      title: error.message,\n      message: \" \",\n      type: \"danger\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 5000,\n        onScreen: true\n      }\n    })\n  }\n\n\n  async function startVideoRecording(params) {\n    if (!screenshare) {\n      setExpanded('recorded')\n    }\n    const constraints = {\n      audio: {\n        echoCancellation: { exact: true }\n      },\n      video: {\n        width: 1280, height: 720\n      }\n    };\n    console.log('Using media constraints:', constraints);\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      handleSuccessVideoRecording(stream);\n    } catch (e) {\n      setRecording(false)\n      console.error('navigator.getUserMedia error:', e);\n      handleError(new Error(`navigator.getUserMedia error:${e.toString()}`));\n    }\n  }\n\n  function handleSuccessVideoRecording(stream) {\n    setRecording(true)\n    console.log('getUserMedia() got stream:', stream);\n    const gumVideo = document.querySelector('video#recorded');\n    gumVideo.srcObject = stream;\n    window.videoHeight = stream.getVideoTracks()[0].getSettings().height;\n    window.videoWidth = stream.getVideoTracks()[0].getSettings().width;\n    if (!screenshare) {\n      let setIntervalDrawVideoId = window.setInterval(() => drawOnCanvas({\n        recording: true,\n        screenshare,\n      }), 1000 / 60)\n      setDrawVideoIntervalId(setIntervalDrawVideoId)\n    } else {\n      drawOnCanvas({\n        recording: true,\n        screenshare,\n      })\n    }\n  }\n\n  function drawOnCanvas({ aspectRatio, width, height, recording, screenshare }) {\n    const canvas = window.canvas = document.querySelector('canvas');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    const recordedVideo = document.querySelector('video#recorded');\n    const video = document.querySelector('video#screen');\n    if (window.recording && window.screenshare) {\n      if (window.expanded == 'screen') {\n        canvas.getContext('2d').drawImage(video, 0, 0, width, height);\n        canvas.getContext('2d').drawImage(recordedVideo, window.innerWidth - 205, window.innerHeight - 125 - 150, (1280 * 105) / 720, 105);\n      } else {\n        window.width = (width * 105) / (height);\n        canvas.getContext('2d').drawImage(recordedVideo, 0, 0, window.innerWidth, window.videoHeight);\n        canvas.getContext('2d').drawImage(video, window.innerWidth - 205, window.innerHeight - 125 - 150, (width * 105) / (height), 105);\n      }\n    }\n    else {\n      if (window.recording) {\n        canvas.getContext('2d').drawImage(recordedVideo, 0, 0, window.innerWidth, (window.videoHeight * window.innerWidth)/1280);\n      }\n      if (window.screenshare) {\n        canvas.getContext('2d').drawImage(video, 0, 0, width, height);\n      }\n    }\n  }\n\n  function clearCanvas() {\n    const context = window.canvas.getContext('2d');\n    context.clearRect(0, 0, window.canvas.width, window.canvas.height);\n  }\n\n  function stopVideoRecording() {\n    const video = document.querySelector('video#recorded');\n    if (drawVideoIntervalId) {\n      clearInterval(drawVideoIntervalId)\n    }\n    video.srcObject.getTracks().forEach(track => track.stop())\n    setRecording(false)\n    clearCanvas()\n  }\n\n\n  function handleDataAvailable(event) {\n    console.log('handleDataAvailable', event);\n    if (event.data && event.data.size > 0) {\n      recordedBlobs.push(event.data);\n    }\n  }\n\n  function startRecording() {\n    recordedBlobs = []\n    let options = { mimeType: 'video/webm;codecs=vp9,opus' };\n    if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n      console.error(`${options.mimeType} is not supported`);\n      options = { mimeType: 'video/webm;codecs=vp8,opus' };\n      if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n        console.error(`${options.mimeType} is not supported`);\n        options = { mimeType: 'video/webm' };\n        if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n          console.error(`${options.mimeType} is not supported`);\n          options = { mimeType: '' };\n        }\n      }\n    }\n\n    try {\n      let stream = window.canvas.captureStream();\n      mediaRecorder = new MediaRecorder(stream, options);\n    } catch (e) {\n      console.error('Exception while creating MediaRecorder:', e);\n      handleError(new Error(`Exception while creating MediaRecorder: ${JSON.stringify(e)}`))\n      return;\n    }\n\n    console.log('Created MediaRecorder', mediaRecorder, 'with options', options);\n    mediaRecorder.onstop = (event) => {\n      console.log('Recorder stopped: ', event);\n      console.log('Recorded Blobs: ', recordedBlobs);\n      const blob = new Blob(recordedBlobs, { type: 'video/webm' });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = 'test.webm';\n      document.body.appendChild(a);\n      a.click();\n      setTimeout(() => {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n      }, 100);\n      setStoring(false)\n      reset()\n    };\n    mediaRecorder.ondataavailable = handleDataAvailable;\n    mediaRecorder.start();\n    setStoring(true)\n    console.log('MediaRecorder started', mediaRecorder);\n    start()\n  }\n\n  function stopRecording() {\n    mediaRecorder.stop();\n  }\n\n  const OPTIONS = { delay: 100 }\n\n\n  return (\n    <div className=\"App\">\n      <ReactNotification />\n      <header className=\"App-header\" id=\"content\">\n        {(!recording && !screenshare) ? <div style={{ marginTop: -115 }}>\n          <img src={defaultImg} width=\"400px\" height=\"auto\" />\n          <div className=\"circular text-center\" style={{ marginTop: 30 }}>\n            You are not sharing anything\n          </div>\n        </div> : null}\n        <div className=\"overlay\" style={{ background: (recording || screenshare) ? \"#f5f5f538\" : \"whitesmoke\" }}>\n\n        </div>\n        <div className=\"action-buttons\">\n          <div data-tip data-for='shareScreen' onClick={() => screenshare ? stopScreenShare() : startScreenRecording()} className=\"circular start\" id={screenshare ? \"stop\" : \"start\"}>\n            <img src={screen} width=\"30px\" height=\"30px\" className=\"v-middle\" />\n          </div>\n\n          <ReactTooltip id='shareScreen' type='dark' place=\"top\" effect='solid'>\n            <span className=\"circular\" style={{ fontSize: 15 }}>{screenshare ? \"Stop screen\" : \"Share screen\"}</span>\n          </ReactTooltip>\n\n          <div data-tip data-for='recording' onClick={() => recording ? stopVideoRecording() : startVideoRecording()} className=\"circular start2\" id={recording ? \"stop\" : \"start\"}>\n            <img src={video} width=\"30px\" height=\"30px\" className=\"v-middle\" />\n          </div>\n          <ReactTooltip id='recording' type='dark' place=\"top\" effect='solid'>\n            <span className=\"circular\" style={{ fontSize: 15 }}>{recording ? \" Stop video\" : \"Share video\"}</span>\n          </ReactTooltip>\n\n          <div data-tip data-for='storing' onClick={() => storing ? stopRecording(true) : startRecording()} className={`circular start3 ${!recording && !screenshare && !storing ? \"disabled\" : null}`} id={storing ? \"stop\" : \"start\"}>\n            <img src={record} width=\"30px\" height=\"30px\" className=\"v-middle\" />\n          </div>\n\n          <ReactTooltip id='storing' type='dark' place=\"top\" effect='solid'>\n            <span className=\"circular\" style={{ fontSize: 15 }}>{storing ? \"Stop recording\" : \"Start recording\"}</span>\n          </ReactTooltip>\n        </div>\n        <video id=\"screen\" className={`${expanded == \"recorded\" && \"bottom-right\"}`} autoPlay playsInline muted style={{ position: \"absolute\", visibility: \"hidden\", height: 0 }}></video>\n        <video id=\"recorded\" className={`${expanded == \"screen\" && \"bottom-right\"}`} playsInline autoPlay muted style={{ position: \"absolute\", visibility: \"hidden\", height: 0 }}></video>\n        <div id=\"errorMsg\"></div>\n        {screenshare && recording && <div style={{ right: 20, top: 20, zIndex: 22 }} className=\"switch v-middle\" onClick={() => setExpanded(expanded == \"screen\" ? \"recorded\" : \"screen\")}>\n          <img src=\"https://image.flaticon.com/icons/svg/125/125868.svg\" width=\"20px\" height=\"20px\" className=\"v-middle\" />\n          <span className=\"circular v-middle\" style={{ fontSize: 17 }}>Switch views</span>\n        </div>}\n\n        {storing && <div id=\"animate-flicker\" style={{ left: 20, top: 8, zIndex: 22, position: \"fixed\" }} title=\"Recording\">\n          <img src={live} width=\"50px\" height=\"50px\" className=\"v-middle\" />\n        </div>}\n        <canvas style={{ zIndex:10, position: (!recording && !screenshare) ? \"absolute\" :  !screenshare && recording ? \"absolute\":\"null\", top: !screenshare && recording && (((window.innerHeight - ((window.videoHeight * window.innerWidth)/1280))/2)) }}></canvas>\n        {storing && <div className=\"timer circular\" style={{ color: \"#f3f1f1\" }}>\n          <div style={{ display: \"inline-block\" }}>{hours <= 9 ? \"0\" + hours : hours}:</div><div style={{ display: \"inline-block\" }}>{minutes <= 9 ? <span>0{minutes}</span> : minutes}:</div>\n          <div style={{ display: \"inline-block\" }}>{seconds <= 9 ? \"0\" + seconds : seconds}</div>\n        </div>\n        }\n      </header>\n    </div >\n  );\n}\n\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/screen.04305a48.svg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/video.433a10ed.svg\";","export default __webpack_public_path__ + \"static/media/record.44b2eb0e.svg\";","export default __webpack_public_path__ + \"static/media/default.fe61671c.svg\";","export default __webpack_public_path__ + \"static/media/live.41bc718e.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}