{"version":3,"sources":["App.js","screen.svg","logo.svg","video.svg","record.svg","default.svg","live.svg","microphone.svg","microphonemuted.svg","reportWebVitals.js","index.js"],"names":["mediaRecorder","recordedBlobs","document","getElementById","App","time","Date","setSeconds","getSeconds","useState","screenshare","setScreenshare","recording","setRecording","storing","setStoring","audioRecording","setAudioRecording","muted","setMuted","expanded","setExpanded","drawVideoIntervalId","setDrawVideoIntervalId","screenShareVideoIntervalId","setDrawScreenShareIntervalId","canvasPos","setCanvasPos","useStopwatch","expiryTimestamp","minutes","hours","seconds","start","isRunning","reset","a","navigator","mediaDevices","getDisplayMedia","video","audio","then","handleSuccess","handleError","err","console","error","canvasResize","window","xValue","innerHeight","fromLeft","innerWidth","left","stream","querySelector","srcObject","clearInterval","clearCanvas","screenAspectRatio","getVideoTracks","getSettings","aspectRatio","setIntervalDrawScreenShareId","setInterval","drawOnCanvas","type","height","width","addEventListener","store","addNotification","title","message","insert","container","animationIn","animationOut","dismiss","duration","onScreen","params","constraints","echoCancellation","exact","log","getUserMedia","handleSuccessVideoRecording","Error","toString","videoHeight","videoWidth","setIntervalDrawVideoId","canvas","recordedVideo","getContext","drawImage","yValue","clearRect","handleDataAvailable","event","data","size","push","restart","useEffect","audioStream","className","id","style","overflow","marginTop","src","defaultImg","background","data-tip","data-for","onClick","getTracks","forEach","track","stop","stopScreenShare","startScreenRecording","screen","place","effect","fontSize","stopVideoRecording","startVideoRecording","getAudioTracks","enabled","mutedmic","mic","options","mimeType","MediaRecorder","isTypeSupported","captureStream","mixedStream","MediaStream","e","JSON","stringify","onstop","blob","Blob","url","URL","createObjectURL","createElement","display","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","ondataavailable","startRecording","record","autoPlay","playsInline","position","visibility","right","top","zIndex","marginRight","marginLeft","live","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ff1382e1.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\nimport logo from './logo.svg';\nimport screen from './screen.svg';\nimport video from './video.svg';\nimport record from './record.svg';\nimport defaultImg from './default.svg';\nimport live from './live.svg';\nimport mic from './microphone.svg';\nimport mutedmic from './microphonemuted.svg';\n\n\n\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport 'react-notifications-component/dist/theme.css'\nimport { store } from 'react-notifications-component';\nimport ReactNotification from 'react-notifications-component'\nimport { useStopwatch } from 'react-timer-hook';\nimport ReactTooltip from 'react-tooltip';\n\nconst videoElem = document.getElementById(\"video\");\nlet dataFrameHeight, dataFrameWidth\n// const errorElement = document.querySelector('#errorMsg');\nvar canvasRecorder\n\n/* globals MediaRecorder */\n\nlet mediaRecorder;\nlet recordedBlobs = [];\n\nfunction App() {\n  const time = new Date();\n  time.setSeconds(time.getSeconds() + 36000);\n\n  const [screenshare, setScreenshare] = useState(false)\n  const [recording, setRecording] = useState(false)\n  const [storing, setStoring] = useState(false)\n  const [audioRecording, setAudioRecording] = useState(false)\n  const [muted, setMuted] = useState(false)\n  const [expanded, setExpanded] = useState(\"recorded\")\n  const [drawVideoIntervalId, setDrawVideoIntervalId] = useState('')\n  const [screenShareVideoIntervalId, setDrawScreenShareIntervalId] = useState('')\n  const [canvasPos, setCanvasPos] = useState({})\n  const {\n    minutes,\n    hours,\n    seconds,\n    isRunning,\n    start,\n    reset,\n    restart,\n  } = useStopwatch({ expiryTimestamp: time });\n\n  window.screenshare = screenshare\n  window.recording = recording\n  window.expanded = expanded\n\n\n  async function startScreenRecording() {\n    try {\n      if (!recording) {\n        setExpanded('screen')\n      }\n      navigator.mediaDevices.getDisplayMedia({ video: true, audio: true })\n        .then(handleSuccess, handleError);\n    } catch (err) {\n      console.error(\"Error: \" + err);\n    };\n\n  }\n\n  function canvasResize(){\n    if((!screenshare && recording)||(screenshare && window.expanded !== 'screen')){\n      let aspectRatio = 1.77777777778\n      let xValue = (window.innerHeight-125) * aspectRatio\n      let fromLeft = (window.innerWidth - xValue)/2\n      if(fromLeft > 0 ){\n        setCanvasPos({...canvasPos, left:fromLeft})\n      }\n    }\n  }\n\n  function handleSuccess(stream) {\n    setScreenshare(true)\n    const video = document.querySelector('video#screen');\n    window.stream = stream\n    video.srcObject = stream;\n    if (recording) {\n      clearInterval(drawVideoIntervalId);\n      setDrawVideoIntervalId(\"\")\n      clearCanvas()\n    }\n    if (screenShareVideoIntervalId) {\n      clearInterval(screenShareVideoIntervalId)\n      setDrawScreenShareIntervalId(\"\")\n      clearCanvas()\n    }\n\n    window.screenAspectRatio = stream.getVideoTracks()[0].getSettings().aspectRatio;\n\n    let setIntervalDrawScreenShareId = window.setInterval(() => drawOnCanvas({\n      recording,\n      screenshare: true,\n      type: \"screenshare\",\n      aspectRatio: stream.getVideoTracks()[0].getSettings().aspectRatio,\n      height: stream.getVideoTracks()[0].getSettings().height,\n      width: stream.getVideoTracks()[0].getSettings().width\n    }), 1000/24)\n    setDrawScreenShareIntervalId(setIntervalDrawScreenShareId)\n    stream.getVideoTracks()[0].addEventListener('ended', () => {\n      setScreenshare(false)\n    });\n  }\n\n\n  function stopScreenShare() {\n    const video = document.querySelector('video#screen');\n    if (!recording) {\n      clearInterval(screenShareVideoIntervalId)\n    }\n    video.srcObject.getTracks().forEach(track => track.stop())\n    setScreenshare(false)\n    clearCanvas()\n  }\n\n  function handleError(error) {\n    store.addNotification({\n      title: error.message,\n      message: \" \",\n      type: \"danger\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 5000,\n        onScreen: true\n      }\n    })\n  }\n\n\n  async function startVideoRecording(params) {\n    if (!screenshare) {\n      setExpanded('recorded')\n    }\n    const constraints = {\n      audio: {\n        echoCancellation: { exact: true }\n      },\n      video: {\n        width: 1280, height: 720\n      }\n    };\n    console.log('Using media constraints:', constraints);\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      handleSuccessVideoRecording(stream);\n    } catch (e) {\n      setRecording(false)\n      console.error('navigator.getUserMedia error:', e);\n      handleError(new Error(`navigator.getUserMedia error:${e.toString()}`));\n    }\n  }\n\n  function handleSuccessVideoRecording(stream) {\n    setRecording(true)\n    console.log('getUserMedia() got stream:', stream);\n    const gumVideo = document.querySelector('video#recorded');\n    gumVideo.srcObject = stream;\n    window.videoHeight = stream.getVideoTracks()[0].getSettings().height;\n    window.videoWidth = stream.getVideoTracks()[0].getSettings().width;\n    window.aspectRatio= stream.getVideoTracks()[0].getSettings().aspectRatio;\n    if (!screenshare) {\n      let setIntervalDrawVideoId = window.setInterval(() => drawOnCanvas({\n        recording: true,\n        screenshare,\n      }), 1000 / 24)\n      setDrawVideoIntervalId(setIntervalDrawVideoId)\n    } else {\n      drawOnCanvas({\n        recording: true,\n        screenshare,\n      })\n    }\n  }\n\n  function drawOnCanvas({ aspectRatio, width, height, recording, screenshare }) {\n    const canvas = window.canvas = document.querySelector('canvas');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight - 125;\n    const recordedVideo = document.querySelector('video#recorded');\n    const video = document.querySelector('video#screen');\n    if (window.recording && window.screenshare) {\n      if (window.expanded == 'screen') {\n        let xValue =  (window.innerHeight - 125)* aspectRatio || window.screenAspectRatio\n        let fromLeft = (window.innerWidth - xValue)/2\n        fromLeft =  fromLeft > 0 ? fromLeft : 0 \n        canvas.getContext('2d').drawImage(video, fromLeft, 0, (window.innerHeight - 125) *  (aspectRatio || window.screenAspectRatio), window.innerHeight - 125);\n        canvas.getContext('2d').drawImage(recordedVideo, ((window.innerWidth - (1280 * 105) / 720) - 50), window.innerHeight - 125 - 150, (1280 * 105) / 720, 105);\n      } else {\n        let xValue = (window.innerHeight-125) * window.aspectRatio\n        let yValue =  window.innerHeight-125;\n        let fromLeft = (window.innerWidth - xValue)/2\n        fromLeft =  fromLeft > 0 ? fromLeft : 0 \n        canvas.getContext('2d').drawImage(recordedVideo, fromLeft, 0, xValue, yValue);\n        canvas.getContext('2d').drawImage(video, ((window.innerWidth - (1280 * 105) / 720) - 50) ,window.innerHeight - 125 - 150,  (width * 105) / (height), 105);\n      }\n    }\n    else {\n      if (window.recording) {\n        let xValue = (window.innerHeight-125) * window.aspectRatio\n        let yValue =  window.innerHeight-125;\n        let fromLeft = (window.innerWidth - xValue)/2\n        fromLeft =  fromLeft > 0 ? fromLeft : 0 \n        canvas.getContext('2d').drawImage(recordedVideo, fromLeft, 0, xValue, yValue);\n      }\n      if (window.screenshare) {\n        let xValue =  (window.innerHeight - 125)*  (aspectRatio || window.screenAspectRatio)\n        let fromLeft = (window.innerWidth - xValue)/2\n        fromLeft =  fromLeft > 0 ? fromLeft : 0 \n        canvas.getContext('2d').drawImage(video, fromLeft, 0, (window.innerHeight - 125)*(aspectRatio || window.screenAspectRatio), window.innerHeight - 125);\n      }\n    }\n  }\n\n  function clearCanvas() {\n    const context = window.canvas.getContext('2d');\n    context.clearRect(0, 0, window.canvas.width, window.canvas.height);\n  }\n\n  function stopVideoRecording() {\n    const video = document.querySelector('video#recorded');\n    if (drawVideoIntervalId) {\n      clearInterval(drawVideoIntervalId)\n    }\n    video.srcObject.getTracks().forEach(track => track.stop())\n    setRecording(false)\n    clearCanvas()\n  }\n\n\n  function handleDataAvailable(event) {\n    console.log('handleDataAvailable', event);\n    if (event.data && event.data.size > 0) {\n      recordedBlobs.push(event.data);\n    }\n  }\n\n  function recordAudio() {\n    // if (recorder && recorder.state == \"recording\") {\n    //     recorder.stop();\n    //     audioStream.getAudioTracks()[0].stop();\n    // } else {\n        navigator.mediaDevices.getUserMedia({\n            audio: true,\n            echoCancellation: { exact: true }\n        }).then(function(stream) {\n            window.audioStream = stream;\n        });\n    // }\n  }\n\n  function muteAudio(){\n    if(audioRecording){\n      window.audioStream.getAudioTracks()[0].enabled = !muted;\n      setMuted(!muted)\n    }\n  }\n\n  useEffect(() => {\n    recordAudio()\n    setAudioRecording(true)\n    canvasResize()\n  }, [])\n\n\n  useEffect(() => {\n    canvasResize()\n  }, [recording, screenshare, expanded])\n\n  window.addEventListener('resize', canvasResize)\n\n  function startRecording() {\n    recordedBlobs = []\n    let options = { mimeType: 'video/webm;codecs=vp9,opus' };\n    if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n      console.error(`${options.mimeType} is not supported`);\n      options = { mimeType: 'video/webm;codecs=vp8,opus' };\n      if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n        console.error(`${options.mimeType} is not supported`);\n        options = { mimeType: 'video/webm' };\n        if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n          console.error(`${options.mimeType} is not supported`);\n          options = { mimeType: '' };\n        }\n      }\n    }\n\n    try {\n      let stream = window.canvas.captureStream();\n      let mixedStream  = new MediaStream([window.audioStream.getAudioTracks()[0], stream.getVideoTracks()[0]]);\n      mediaRecorder = new MediaRecorder(mixedStream, options);\n    } catch (e) {\n      console.error('Exception while creating MediaRecorder:', e);\n      handleError(new Error(`Exception while creating MediaRecorder: ${JSON.stringify(e)}`))\n      return;\n    }\n\n    console.log('Created MediaRecorder', mediaRecorder, 'with options', options);\n    mediaRecorder.onstop = (event) => {\n      console.log('Recorder stopped: ', event);\n      console.log('Recorded Blobs: ', recordedBlobs);\n      const blob = new Blob(recordedBlobs, { type: 'video/webm' });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = 'test.webm';\n      document.body.appendChild(a);\n      a.click();\n      setTimeout(() => {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n      }, 100);\n      setStoring(false)\n      reset()\n    };\n    mediaRecorder.ondataavailable = handleDataAvailable;\n    mediaRecorder.start();\n    setStoring(true)\n    console.log('MediaRecorder started', mediaRecorder);\n    start()\n  }\n\n  function stopRecording() {\n    mediaRecorder.stop();\n  }\n\n  const OPTIONS = { delay: 100 }\n\n\n  return (\n    <div className=\"App\" >\n      <ReactNotification />\n      <header className=\"App-header\" id=\"content\" style={{overflow:\"hidden\"}}>\n        {(!recording && !screenshare) ? <div style={{ marginTop: -115 }}>\n          <img src={defaultImg} width=\"400px\" height=\"auto\" />\n          <div className=\"circular text-center\" style={{ marginTop: 30 }}>\n            You are not sharing anything\n          </div>\n        </div> : null}\n        <div className=\"overlay\" style={{ background: (recording || screenshare) ? \"#f5f5f538\" : \"whitesmoke\" }}>\n\n        </div>\n        <div className=\"action-buttons\">\n          <div data-tip data-for='shareScreen' onClick={() => screenshare ? stopScreenShare() : startScreenRecording()} className=\"circular start\" id={screenshare ? \"stop\" : \"start\"}>\n            <img src={screen} width=\"30px\" height=\"30px\" className=\"v-middle\" />\n          </div>\n\n          <ReactTooltip id='shareScreen' type='dark' place=\"top\" effect='solid'>\n            <span className=\"circular\" style={{ fontSize: 15 }}>{screenshare ? \"Stop screen\" : \"Share screen\"}</span>\n          </ReactTooltip>\n\n          <div data-tip data-for='recording' onClick={() => recording ? stopVideoRecording() : startVideoRecording()} className=\"circular start2\" id={recording ? \"stop\" : \"start\"}>\n            <img src={video} width=\"30px\" height=\"30px\" className=\"v-middle\" />\n          </div>\n          <ReactTooltip id='recording' type='dark' place=\"top\" effect='solid'>\n            <span className=\"circular\" style={{ fontSize: 15 }}>{recording ? \" Stop video\" : \"Share video\"}</span>\n          </ReactTooltip>\n\n          <div data-tip data-for='audio' onClick={() => muteAudio()} className={`circular start3`} id={!muted ? \"stop\" : \"start\"}>\n            <img src={!muted ? mic: mutedmic} width=\"30px\" height=\"30px\" className=\"v-middle\" />\n          </div>\n\n          <ReactTooltip id='audio' type='dark' place=\"top\" effect='solid'>\n            <span className=\"circular\" style={{ fontSize: 15 }}>{!muted ? \"Mute micophone\" : \"Unmute micophone\"}</span>\n          </ReactTooltip>\n\n          <div data-tip data-for='storing' onClick={() => storing ? stopRecording(true) : startRecording()} className={`circular start3 ${!recording && !screenshare && !storing ? \"disabled\" : null}`} id={storing ? \"stop\" : \"start\"}>\n            <img src={record} width=\"30px\" height=\"30px\" className=\"v-middle\" />\n          </div>\n\n          <ReactTooltip id='storing' type='dark' place=\"top\" effect='solid'>\n            <span className=\"circular\" style={{ fontSize: 15 }}>{storing ? \"Stop recording\" : \"Start recording\"}</span>\n          </ReactTooltip>\n\n\n        </div>\n        <video id=\"screen\" className={`${expanded == \"recorded\" && \"bottom-right\"}`} autoPlay playsInline muted style={{ position: \"absolute\", visibility: \"hidden\", height: 0 }}></video>\n        <video id=\"recorded\" className={`${expanded == \"screen\" && \"bottom-right\"}`} playsInline autoPlay muted style={{ position: \"absolute\", visibility: \"hidden\", height: 0 }}></video>\n        <div id=\"errorMsg\"></div>\n        {screenshare && recording &&  <div style={{ right: 20, top: 20, zIndex: 22 }} className=\"switch v-middle\" onClick={() => setExpanded(expanded == \"screen\" ? \"recorded\" : \"screen\")}>\n          <div className=\"switch-div\">\n            <img src=\"https://image.flaticon.com/icons/svg/125/125868.svg\" width=\"20px\" height=\"20px\" className=\"v-middle\" style={{marginRight:10, marginLeft:3}} />\n            <span className=\"circular v-middle\" style={{ fontSize: 17, marginTop:-1 }}>Switch views</span>\n          </div>\n        </div>}\n\n        {storing && <div id=\"animate-flicker\" style={{ left: 20, top: 8, zIndex: 22, position: \"fixed\" }} title=\"Recording\">\n          <img src={live} width=\"50px\" height=\"50px\" className=\"v-middle\" />\n        </div>}\n        <canvas style={{ zIndex:10, position: (!recording && !screenshare) ? \"absolute\" :  (!screenshare && recording)||(screenshare && window.expanded !== 'screen') ? \"absolute\":\"null\", /*left: window.expanded !== 'screen' && canvasPos.left,*/ top:0 }}></canvas>\n        {storing && <div className=\"timer circular\" style={{ color: \"#f3f1f1\" }}>\n          <div style={{ display: \"inline-block\" }}>{hours <= 9 ? \"0\" + hours : hours}:</div><div style={{ display: \"inline-block\" }}>{minutes <= 9 ? <span>0{minutes}</span> : minutes}:</div>\n          <div style={{ display: \"inline-block\" }}>{seconds <= 9 ? \"0\" + seconds : seconds}</div>\n        </div>\n        }\n      </header>\n    </div >\n  );\n}\n\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/screen.04305a48.svg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/video.433a10ed.svg\";","export default __webpack_public_path__ + \"static/media/record.44b2eb0e.svg\";","export default __webpack_public_path__ + \"static/media/default.fe61671c.svg\";","export default __webpack_public_path__ + \"static/media/live.41bc718e.svg\";","export default __webpack_public_path__ + \"static/media/microphone.49d8b474.svg\";","export default __webpack_public_path__ + \"static/media/microphonemuted.1360a123.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}